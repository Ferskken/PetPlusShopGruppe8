{
	"info": {
		"_postman_id": "aebd650a-6c9c-4880-8387-cd4fd001feb8",
		"name": "Pet Shop Collection",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "25423996",
		"_collection_link": "https://grey-meteor-522796.postman.co/workspace/PetShop~12fbf03c-f877-4ded-9476-a67f79966f0e/collection/25423996-aebd650a-6c9c-4880-8387-cd4fd001feb8?action=share&creator=25423996&source=collection_link"
	},
	"item": [
		{
			"name": "Items",
			"item": [
				{
					"name": "Post new item",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Successful POST request\", function () {\r",
									"    pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Create new item and set item Id as global variable\", function () {\r",
									"  const responseJson = pm.response.json();\r",
									"  pm.globals.set(\"lastPostedItemId\", responseJson.data.id);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"New Test Item\",\r\n    \"description\": \"This is a temporary test item for a postman test.\",\r\n    \"categories\": \"dog,indoors\",\r\n    \"price\": 9.99,\r\n    \"image\": \"item.png\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/items",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"items"
							]
						}
					},
					"response": []
				},
				{
					"name": "Post new item ID in use",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 If the id is already in use\", function () {\r",
									"    pm.response.to.have.status(400);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\":{{lastPostedItemId}},\r\n    \"name\": \"New Test Item\",\r\n    \"description\": \"This is a temporary test item for a postman test.\",\r\n    \"categories\": \"dog,indoors\",\r\n    \"price\": 9.99,\r\n    \"image\": \"item.png\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/items/",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"items",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Get items by categories",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/items?categories=dog",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"items"
							],
							"query": [
								{
									"key": "categories",
									"value": "dog"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get items by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/items/{{lastPostedItemId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"items",
								"{{lastPostedItemId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all items",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/items?categories=all",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"items"
							],
							"query": [
								{
									"key": "categories",
									"value": "all"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get items by name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/items/by-name/New Test Item",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"items",
								"by-name",
								"New Test Item"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit item by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Edited Test Item\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/items/{{lastPostedItemId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"items",
								"{{lastPostedItemId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Item by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/items/{{lastPostedItemId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"items",
								"{{lastPostedItemId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Users",
			"item": [
				{
					"name": "Post new user",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let random = +new Date();\r",
									"\r",
									"pm.globals.set(\"testCustomerUsername\", `${random}-user`);\r",
									"pm.globals.set(\"testCustomerEmail\", `${random}-user@test.com`);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User creation was successful\", function () {\r",
									"  pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
									"});\r",
									"\r",
									"pm.test(\"Create new user and set user Id as global variable\", function () {\r",
									"  const responseJson = pm.response.json();\r",
									"  pm.globals.set(\"lastPostedUserId\", responseJson.user.id);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "{{testCustomerUsername}}",
									"type": "text"
								},
								{
									"key": "email",
									"value": "{{testCustomerEmail}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "123456",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user by name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/user/by-name/-user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"by-name",
								"-user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get user by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/{{lastPostedUserId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{lastPostedUserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit user by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\":\"Edited Test User\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/{{lastPostedUserId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{lastPostedUserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Edited user by name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/user/by-name/Edited Test User",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"by-name",
								"Edited Test User"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete user by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/{{lastPostedUserId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{lastPostedUserId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Orders",
			"item": [
				{
					"name": "Post new order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Create new order and set order Id as global variable\", function () {\r",
									"  const responseJson = pm.response.json();\r",
									"  pm.globals.set(\"lastPostedOrderId\", responseJson.id);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\r\n  \"cartItems\": [\r\n    {\r\n      \"id\": 10,\r\n      \"price\": 10.99,\r\n      \"quantity\": 2\r\n    },\r\n    {\r\n      \"product\": \"man\",\r\n      \"price\": 5.99,\r\n      \"quantity\": 1\r\n    }\r\n  ],\r\n  \"firstName\": \"Post\",\r\n  \"lastName\": \"Man\",\r\n  \"address\": \"777 Postman St\",\r\n  \"email\": \"\",\r\n  \"zipCode\": 12345,\r\n  \"city\": \"Postaltown\",\r\n  \"phone\": 12121212\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "get all orders",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "get orders by phone",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orders/search?phone=12121212",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders",
								"search"
							],
							"query": [
								{
									"key": "phone",
									"value": "12121212"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit order by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"firstName\": \"Edited\",\r\n    \"lastName\": \"Order\"\r\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/orders/{{lastPostedOrderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders",
								"{{lastPostedOrderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete order by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 204\", function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orders/{{lastPostedOrderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders",
								"{{lastPostedOrderId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Customer Test Case",
			"item": [
				{
					"name": "Create Customer",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let random = +new Date();\r",
									"\r",
									"pm.globals.set(\"testCustomerUsername\", `${random}customer-testcase-user`);\r",
									"pm.globals.set(\"testCustomerEmail\", `${random}-user@test.com`);\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User creation was successful\", function () {\r",
									"  pm.expect(pm.response.code).to.be.oneOf([200, 201]);\r",
									"});\r",
									"\r",
									"pm.test(\"Response should contain 'User created'\", function () {\r",
									"    pm.expect(pm.response.json().message).to.equal(\"User created\");\r",
									"});\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Create new user and set user Id as global variable\", function () {\r",
									"  const responseJson = pm.response.json();\r",
									"  pm.globals.set(\"lastPostedUserId\", responseJson.user.id);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "{{testCustomerUsername}}",
									"type": "text"
								},
								{
									"key": "email",
									"value": "{{testCustomerEmail}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "123456",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Customer By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/{{lastPostedUserId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{lastPostedUserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Test Item 1",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let random = +new Date();\r",
									"\r",
									"pm.globals.set(\"testItem1name\", `${random}-item`);\r",
									"\r",
									"\r",
									"let categories = [\"cats\", \"dogs\", \"birds\"];\r",
									"let randomIndex = Math.floor(Math.random() * categories.length);\r",
									"let selectedCategory = categories[randomIndex];\r",
									"\r",
									"pm.globals.set(\"testItem1category\", selectedCategory);\r",
									"\r",
									"let randomPrice = Math.floor(Math.random() * 100) + 1;\r",
									"pm.globals.set(\"randomItem1Price\", randomPrice);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create new item and set item Id as global variable\", function () {\r",
									"  const responseJson = pm.response.json();\r",
									"  pm.globals.set(\"testItem1Id\", responseJson.data.id);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "{{testItem1name}}",
									"type": "text"
								},
								{
									"key": "description",
									"value": "Test item 1",
									"type": "text"
								},
								{
									"key": "categories",
									"value": "{{testItem1category}}",
									"type": "text"
								},
								{
									"key": "price",
									"value": "{{randomItem1Price}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/items",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"items"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Test Item 2",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"let random = +new Date();\r",
									"\r",
									"pm.globals.set(\"testItem2name\", `${random}-item`);\r",
									"\r",
									"\r",
									"let categories = [\"cats\", \"dogs\", \"birds\"];\r",
									"let randomIndex = Math.floor(Math.random() * categories.length);\r",
									"let selectedCategory = categories[randomIndex];\r",
									"\r",
									"pm.globals.set(\"testItem2category\", selectedCategory);\r",
									"\r",
									"let randomPrice = Math.floor(Math.random() * 100) + 1;\r",
									"pm.globals.set(\"randomItem2Price\", randomPrice);\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Create new item and set item Id as global variable\", function () {\r",
									"  const responseJson = pm.response.json();\r",
									"  pm.globals.set(\"testItem2Id\", responseJson.data.id);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "name",
									"value": "{{testItem2name}}",
									"type": "text"
								},
								{
									"key": "description",
									"value": "Test item 2",
									"type": "text"
								},
								{
									"key": "categories",
									"value": "{{testItem2category}}",
									"type": "text"
								},
								{
									"key": "price",
									"value": "{{randomItem2Price}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{baseUrl}}/items",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"items"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Test Item 1 by name",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/items/by-name/{{testItem1name}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"items",
								"by-name",
								"{{testItem1name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Test Item 1 By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/items/{{testItem1Id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"items",
								"{{testItem1Id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Test Item 2 By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/items/by-name/{{testItem2name}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"items",
								"by-name",
								"{{testItem2name}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit item by id Copy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Edited Test Item\",\r\n    \"description\": \"This is a temporary test item for a postman test.\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/items/{{testItem1Id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"items",
								"{{testItem1Id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test Item 1 Rename",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{baseUrl}}/items/{{testItem1Id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"items",
								"{{testItem1Id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Customer Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Create new order and set order Id as global variable\", function () {\r",
									"  const responseJson = pm.response.json();\r",
									"  pm.globals.set(\"lastPostedOrderId\", responseJson.id);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "\r\n\r\n{\r\n\r\n  \"cartItems\":[\r\n    {\r\n      \"name\": \"{{testItem1name}}\",\r\n      \"quantity\": 7\r\n    },\r\n    {\r\n      \"name\": \"{{testItem2name}}\",\r\n      \"quantity\": 1\r\n    }\r\n  ],\r\n  \"firstName\": \"Test\",\r\n  \"lastName\": \"Customer\",\r\n  \"address\": \"777 Postman St\",\r\n  \"email\": \"{{testCustomerEmail}}\",\r\n  \"zipCode\": 6018,\r\n  \"city\": \"Postaltown\",\r\n  \"phone\": 12345678\r\n}\r\n\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/orders",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Customer Order By Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orders/search/?id={{lastPostedOrderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders",
								"search",
								""
							],
							"query": [
								{
									"key": "id",
									"value": "{{lastPostedOrderId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Customer Order By Phone",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orders/search?phone=12345678",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders",
								"search"
							],
							"query": [
								{
									"key": "phone",
									"value": "12345678"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Customer Order By Zip",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orders/search?zipCode=6018",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders",
								"search"
							],
							"query": [
								{
									"key": "zipCode",
									"value": "6018"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Test Item 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"New Item\",\r\n    \"description\": \"This is a new item.\",\r\n    \"categories\": \"category1, category2\",\r\n    \"price\": 9.99,\r\n    \"image\": \"item.png\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/items/{{testItem1Id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"items",
								"{{testItem1Id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test Item 1 Deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"New Item\",\r\n    \"description\": \"This is a new item.\",\r\n    \"categories\": \"category1, category2\",\r\n    \"price\": 9.99,\r\n    \"image\": \"item.png\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/items/{{testItem1Id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"items",
								"{{testItem1Id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Test Item 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"New Item\",\r\n    \"description\": \"This is a new item.\",\r\n    \"categories\": \"category1, category2\",\r\n    \"price\": 9.99,\r\n    \"image\": \"item.png\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/items/{{testItem2Id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"items",
								"{{testItem2Id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test Item 2 Deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									"\r",
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"New Item\",\r\n    \"description\": \"This is a new item.\",\r\n    \"categories\": \"category1, category2\",\r\n    \"price\": 9.99,\r\n    \"image\": \"item.png\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/items/{{testItem2Id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"items",
								"{{testItem2Id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Customer Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/orders/{{lastPostedOrderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"orders",
								"{{lastPostedOrderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Customer",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response time is less than 200ms\", function () {\r",
									"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/{{lastPostedUserId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{lastPostedUserId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Test Customer Deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/{{lastPostedUserId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{lastPostedUserId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiQWRtaW5pc3RyYXRvciIsInJvbGUiOiJBZG1pbiIsImlhdCI6MTY4NTAxMDI5M30.u9NQOM20OuLrpHoWxZA1BhH7M3hZW53vr4daUH9jl6o",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "group08.web-tek.ninja/petapi"
		},
		{
			"key": "localUrl",
			"value": "localhost:8080/petapi"
		},
		{
			"key": "Token",
			"value": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiQWRtaW5pc3RyYXRvciIsInJvbGUiOiJBZG1pbiIsImlhdCI6MTY4NTAxMDI5M30.u9NQOM20OuLrpHoWxZA1BhH7M3hZW53vr4daUH9jl6o",
			"type": "string"
		}
	]
}